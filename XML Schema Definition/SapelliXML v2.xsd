<?xml version="1.0" encoding="UTF-8" ?>

<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

	<!--++++++++++++++++++++++++++++++++-->
	<!--Enums-->
	<!--++++++++++++++++++++++++++++++++-->

	<xs:simpleType name="screenTransition">
		<xs:restriction base="xs:string">
			<xs:enumeration value="none"/>
			<xs:enumeration value="horizontal"/>
			<xs:enumeration value="vertical"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="audioFeedback">
		<xs:restriction base="xs:string">
			<xs:enumeration value="long_click"/>
			<xs:enumeration value="none"/>
			<xs:enumeration value="sequential"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="next">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exitapp"/>
			<xs:enumeration value="loopform"/>
			<xs:enumeration value="prevform"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="gpsType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="any"/>
			<xs:enumeration value="GPS"/>
			<xs:enumeration value="network"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="gpsStartWith">
		<xs:restriction base="xs:string">
			<xs:enumeration value="form"/>
			<xs:enumeration value="page"/>
			<xs:enumeration value="field"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="flash">
		<xs:restriction base="xs:string">
			<xs:enumeration value="on"/>
			<xs:enumeration value="always"/>
			<xs:enumeration value="true"/>
			<xs:enumeration value="auto"/>
			<xs:enumeration value="off"/>
			<xs:enumeration value="never"/>
			<xs:enumeration value="false"/>
		</xs:restriction>
	</xs:simpleType>

	<!--++++++++++++++++++++++++++++++++-->
	<!-- Attribute Groups -->
	<!--++++++++++++++++++++++++++++++++-->

	<xs:attributeGroup name="Controls">
		<xs:attribute name="img" type="xs:string"/>
		<xs:attribute name="backgroundColor" type="xs:string"/>
		<xs:attribute name="description" type="xs:string"/>
	</xs:attributeGroup>

	<xs:attributeGroup name="Field">
		<xs:attribute name="id" type="xs:string"/>
		<xs:attribute name="caption" type="xs:string"/>
		<xs:attribute name="optional" type="xs:boolean"/>
		<xs:attribute name="jump" type="xs:string"/>
		<xs:attribute name="description" type="xs:string"/>
		<xs:attribute name="skipOnBack" type="xs:boolean"/>
		<xs:attribute name="showOnCreate" type="xs:boolean"/>
		<xs:attribute name="showOnEdit" type="xs:boolean"/>
		<xs:attribute name="editable" type="xs:boolean"/>
		<xs:attribute name="showBackOnCreate" type="xs:boolean"/>
		<xs:attribute name="showBackOnEdit" type="xs:boolean"/>
		<xs:attribute name="showCancelOnCreate" type="xs:boolean"/>
		<xs:attribute name="showCancelOnEdit" type="xs:boolean"/>
		<xs:attribute name="showForwardOnCreate" type="xs:boolean"/>
		<xs:attribute name="showForwardOnEdit" type="xs:boolean"/>
		<xs:attribute name="showBack" type="xs:boolean"/>
		<xs:attribute name="showCancel" type="xs:boolean"/>
		<xs:attribute name="showForward" type="xs:boolean"/>
	</xs:attributeGroup>

	<xs:attributeGroup name="MediaField">
		<xs:attribute name="max" type="xs:positiveInteger"/>
		<xs:attribute name="review" type="xs:boolean"/>
		<xs:attribute name="discardImg" type="xs:string"/>
	</xs:attributeGroup>

	<!--++++++++++++++++++++++++++++++++-->
	<!-- Groups -->
	<!--++++++++++++++++++++++++++++++++-->

	<xs:group name="FieldsGroup">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded" minOccurs="0">
				<!--Back, Cancel, Forward should exist only once, and with the current setup, they
				can show up multiple times. However, there is no workaround at least with XSD 1.0
				-->
				<xs:element ref="Back"/>
				<xs:element ref="Cancel"/>
				<xs:element ref="Forward"/>
				<xs:element ref="Page"/>
				<xs:element ref="Choice"/>
				<xs:element ref="Location"/>
				<xs:element ref="Orientation"/>
				<xs:element ref="Audio"/>
				<xs:element ref="Photo"/>
				<xs:element ref="Video"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>

	<!--++++++++++++++++++++++++++++++++-->
	<!-- Elements -->
	<!--++++++++++++++++++++++++++++++++-->
	<xs:element name="SapelliCollectorProject">
		<xs:complexType mixed="true">
			<!-- Elements -->
			<xs:sequence>
				<xs:element maxOccurs="1" minOccurs="0" ref="Configuration"/>
				<xs:choice maxOccurs="unbounded" minOccurs="0">
					<xs:element ref="Form"/>
				</xs:choice>
			</xs:sequence>
			<!-- Attributes -->
			<!-- TODO: id: Positive integer restriction -->
			<xs:attribute name="id" type="xs:integer" use="required"/>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="format" default="2" type="xs:integer"/>
			<xs:attribute name="variant" type="xs:string"/>
			<xs:attribute name="version" default="0" type="xs:string"/>
			<!-- TODO: startForm: Any String (id of an existing Form) -->
			<xs:attribute name="startForm" type="xs:string"/>
			<!-- TODO: defaultLanguage: A string representing a language according to the BCP-47 syntax  -->
			<xs:attribute name="defaultLanguage" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Configuration">
		<xs:complexType mixed="true">
			<!-- Elements -->
			<xs:all>
				<xs:element maxOccurs="1" minOccurs="0" ref="Logging"/>
			</xs:all>
		</xs:complexType>
	</xs:element>

	<xs:element name="Logging">
		<xs:complexType mixed="true">
			<!-- Attributes -->
			<xs:attribute name="enabled" default="true" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Form">
		<xs:complexType mixed="true">
			<xs:group ref="FieldsGroup"/>
			<!-- Attributes -->
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="storeEndTime" type="xs:boolean"/>
			<xs:attribute name="startField" type="xs:string"/>
			<xs:attribute name="clickAnimation" type="xs:boolean"/>
			<xs:attribute name="screenTransition" type="screenTransition"/>
			<xs:attribute name="audioFeedback" type="audioFeedback"/>
			<xs:attribute name="obfuscateMediaFiles" type="xs:boolean"/>
			<xs:attribute name="next" type="next"/>
			<xs:attribute name="saveSound" type="xs:boolean"/>
			<xs:attribute name="saveVibrate" type="xs:boolean"/>
			<!-- TODO: controlBackgroundColor: Hex Colour String (e.g. #000000) -->
			<xs:attribute name="controlBackgroundColor" type="xs:string"/>
			<xs:attribute name="shortcutImage" type="xs:string"/>
			<xs:attribute name="singlePage" type="xs:boolean"/>
			<!-- TODO: defaultLanguage: A string representing a language according to the BCP-47 syntax  -->
			<xs:attribute name="defaultLanguage" type="xs:string"/>
			<xs:attribute name="showImgSizes" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Back">
		<xs:complexType>
			<xs:attributeGroup ref="Controls"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Cancel">
		<xs:complexType>
			<xs:attributeGroup ref="Controls"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Forward">
		<xs:complexType>
			<xs:attributeGroup ref="Controls"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Page">
		<xs:complexType mixed="true">
			<!-- TODO: Page cannot contain pages -->
			<xs:group ref="FieldsGroup"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Choice">
		<xs:complexType mixed="true">
			<!-- Elements -->
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" ref="Choice"/>
			</xs:sequence>
			<!-- Attributes -->
			<xs:attributeGroup ref="Field"/>
			<xs:attribute name="value" type="xs:string"/>
			<xs:attribute name="img" type="xs:string"/>
			<!--TODO: captionHeight: 0 to 1-->
			<xs:attribute name="captionHeight" type="xs:decimal"/>
			<xs:attribute name="matchTextSize" type="xs:boolean"/>
			<xs:attribute name="backgroundColor" type="xs:string"/>
			<xs:attribute name="crossed" type="xs:boolean"/>
			<xs:attribute name="crossColor" type="xs:string"/>
			<xs:attribute name="noColumn" type="xs:boolean"/>
			<xs:attribute name="questionDescription" type="xs:string"/>
			<xs:attribute name="answerDescription" type="xs:string"/>
			<xs:attribute name="cols" type="xs:positiveInteger"/>
			<xs:attribute name="rows" type="xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Location">
		<xs:complexType mixed="true">
			<xs:attributeGroup ref="Field"/>
			<xs:attribute name="type" type="gpsType"/>
			<xs:attribute name="startWith" type="gpsStartWith"/>
			<xs:attribute name="waitAtField" type="xs:boolean"/>
			<xs:attribute name="useBestKnownLocationOnTimeout" type="xs:boolean"/>
			<xs:attribute name="timeout" type="xs:positiveInteger"/>
			<xs:attribute name="maxAge" type="xs:positiveInteger"/>
			<xs:attribute name="maxAccuracyRadius" type="xs:positiveInteger"/>
			<xs:attribute name="doublePrecision" type="xs:boolean"/>
			<xs:attribute name="storeAltitude" type="xs:boolean"/>
			<xs:attribute name="storeBearing" type="xs:boolean"/>
			<xs:attribute name="storeSpeed" type="xs:boolean"/>
			<xs:attribute name="storeAccuracy" type="xs:boolean"/>
			<xs:attribute name="storeProvider" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Orientation">
		<xs:complexType mixed="true">
			<xs:attributeGroup ref="Field"/>
			<xs:attribute name="storeAzimuth" type="xs:boolean"/>
			<xs:attribute name="storePitch" type="xs:boolean"/>
			<xs:attribute name="storeRoll" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>


	<xs:element name="Audio">
		<xs:complexType mixed="true">
			<xs:attributeGroup ref="Field"/>
			<xs:attributeGroup ref="MediaField"/>
			<xs:attribute name="startRecImg" type="xs:string"/>
			<xs:attribute name="stopRecImg" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Photo">
		<xs:complexType mixed="true">
			<xs:attributeGroup ref="Field"/>
			<xs:attributeGroup ref="MediaField"/>
			<xs:attribute name="captureImg" type="xs:string"/>
			<xs:attribute name="useFrontCamera" type="xs:boolean"/>
			<xs:attribute name="flash" type="flash"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="Video">
		<xs:complexType mixed="true">
			<xs:attributeGroup ref="Field"/>
			<xs:attributeGroup ref="MediaField"/>
			<xs:attribute name="useFrontCamera" type="xs:boolean"/>
			<xs:attribute name="startRecImg" type="xs:string"/>
			<xs:attribute name="stopRecImg" type="xs:string"/>
		</xs:complexType>
	</xs:element>

</xs:schema>
