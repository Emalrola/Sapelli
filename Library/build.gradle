apply plugin: 'java'

// TODO Warnings?

repositories {
    maven { url "https://jitpack.io" }
}

configurations {
    // For copying source code from dependencies:
    xerces
    validator
}

dependencies {
    // Source:
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Joda:
    compile 'joda-time:joda-time:2.9.4'

    // Apache:
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.github.ExCiteS:apache-commons-codec-shaded:1.10' // See https://github.com/ExCiteS/apache-commons-codec-shaded
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-compress:1.12'
    xerces 'xerces:xercesImpl:2.11.0:sources@jar'
    validator 'commons-validator:commons-validator:1.5.1:sources@jar'

    // Non-Apache compression libs:
    compile 'org.tukaani:xz:1.5'
    compile 'com.github.jponge:lzma-java:1.3'

    // Google:
    compile 'com.googlecode.libphonenumber:libphonenumber:7.4.5'
}

def thirdPartySrcFolder = new File(project.buildDir, 'third-party-src')

task extractXercesClasses(type: Copy) {
    from zipTree(configurations.xerces.singleFile)
    into thirdPartySrcFolder
    include (
            'org/apache/xerces/util/XMLChar.java',
            'org/apache/xerces/util/XML11Char.java')
}

task extractValidatorClasses(type: Copy) {
    from zipTree(configurations.validator.singleFile)
    into thirdPartySrcFolder
    include (
            'org/apache/commons/validator/routines/DomainValidator.java',
            'org/apache/commons/validator/routines/EmailValidator.java',
            'org/apache/commons/validator/routines/InetAddressValidator.java',
            'org/apache/commons/validator/routines/RegexValidator.java',
            'org/apache/commons/validator/routines/UrlValidator.java')
}

sourceSets {
    main {
        java {
            // in addition to the default source folder (src/main/java/) we add this one:
            srcDir thirdPartySrcFolder
        }
    }
}

compileJava {
    dependsOn extractXercesClasses, extractValidatorClasses
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

task generateCMMBPCProperties(dependsOn: processResources) << {
    //def os = new ByteArrayOutputStream()
    javaexec {
        main = 'uk.ac.ucl.excites.sapelli.shared.io.text.GenerateCMMBPCProperties'
        classpath = sourceSets.main.runtimeClasspath
        args new File(projectDir, 'charsetinfo').absolutePath, sourceSets.main.output.resourcesDir.absolutePath
        //standardOutput = os
    }
    //def buildString = os.toString()
}

processResources.finalizedBy(generateCMMBPCProperties)
